name: Go Build and Test

on:
  push:
    branches: [ main ]
    paths:
      - 'go/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'go/**'
  workflow_dispatch:

env:
  ANTLR_JAR_URL: https://github.com/rrevenantt/antlr4rust/releases/download/antlr4-4.8-2-Rust-0.3.0-beta/antlr4-4.8-2-SNAPSHOT-complete.jar
  ANTLR_JAR_VERSION: antlr4-4.8-2-Rust-0.3.0-beta

jobs:
  build_and_test:
    name: Build and Test Go
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go-version: ['1.19', '1.20']

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install Java for ANTLR (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y default-jre protobuf-compiler

    - name: Install Java for ANTLR and Protobuf (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install openjdk@11 protobuf

    - name: Cache ANTLR JAR
      id: cache-antlr
      uses: actions/cache@v3
      with:
        path: build-tools/antlr4-4.8-2-SNAPSHOT-complete.jar
        key: antlr-jar-${{ env.ANTLR_JAR_VERSION }}

    - name: Download ANTLR JAR with Rust support
      if: steps.cache-antlr.outputs.cache-hit != 'true'
      run: |
        mkdir -p build-tools
        curl -L -o build-tools/antlr4-4.8-2-SNAPSHOT-complete.jar ${{ env.ANTLR_JAR_URL }}
        echo "Downloaded ANTLR JAR to build-tools/antlr4-4.8-2-SNAPSHOT-complete.jar"

    - name: Set ANTLR_JAR environment variable
      run: echo "ANTLR_JAR=$(pwd)/build-tools/antlr4-4.8-2-SNAPSHOT-complete.jar" >> $GITHUB_ENV

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable

    - name: Cache cargo dependencies
      uses: Swatinem/rust-cache@v2

    - name: Generate Proto Visitors
      run: GENERATE_PROTO_VISITORS=true cargo check

    - name: Build Rust library
      run: cargo build

    - name: Build Go package
      run: |
        cd go
        go build ./...

    - name: Test Go package
      run: |
        cd go
        go test -v ./...

    - name: Go mod tidy
      run: |
        cd go
        go mod tidy
        git diff --exit-code go.mod go.sum